{% extends 'base.html.twig' %}
{% block body %}
    {% block javascripts %}

        {% javascripts '@InitialShippingBundle/Resources/public/js/aa_jquery-1.8.0.min.js' %}
        <script src="{{ asset_url }}"></script>
        {% endjavascripts %}
        {% javascripts '@InitialShippingBundle/Resources/public/js/highchart/highcharts.js' %}
        <script src="{{ asset_url }}"></script>
        {% endjavascripts %}
        {% javascripts '@InitialShippingBundle/Resources/public/js/highchart/exporting.js' %}
        <script src="{{ asset_url }}"></script>
        {% endjavascripts %}
        {% javascripts '@InitialShippingBundle/Resources/public/js/highchart/svg.min.js' %}
        <script src="{{ asset_url }}"></script>
        {% endjavascripts %}
        {% javascripts '@InitialShippingBundle/Resources/public/js/bootstrap.min.js' %}
        <script src="{{ asset_url }}"></script>
        {% endjavascripts %}
        <script>
            Highcharts.createElement('link', {
                href: 'https://fonts.googleapis.com/css?family=Dosis:400,600',
                rel: 'stylesheet',
                type: 'text/css'
            }, null, document.getElementsByTagName('head')[0]);
            Highcharts.theme = {
                colors: ["#7cb5ec", "#f7a35c", "#90ee7e", "#7798BF", "#aaeeee", "#ff0066", "#eeaaee",
                    "#55BF3B", "#DF5353", "#7798BF", "#aaeeee"],
                chart: {
                    backgroundColor: null,
                    style: {
                        fontFamily: "Dosis, sans-serif"
                    }
                },
                title: {
                    style: {
                        fontSize: '16px',
                        fontWeight: 'bold',
                        textTransform: 'uppercase'
                    }
                },
                tooltip: {
                    borderWidth: 0,
                    backgroundColor: 'rgba(219,219,216,0.8)',
                    shadow: false
                },
                legend: {
                    itemStyle: {
                        fontWeight: 'bold',
                        fontSize: '13px'
                    }
                },
                xAxis: {
                    gridLineWidth: 1,
                    labels: {
                        style: {
                            fontSize: '12px'
                        }
                    }
                },
                yAxis: {
                    minorTickInterval: 'auto',
                    title: {
                        style: {
                            textTransform: 'uppercase'
                        }
                    },
                    labels: {
                        style: {
                            fontSize: '12px'
                        }
                    }
                },
                plotOptions: {
                    candlestick: {
                        lineColor: '#404048'
                    }
                },


                // General
                background2: '#F0F0EA'

            };
            Highcharts.setOptions(Highcharts.theme);
        </script>
        <script type="text/javascript">
            {{ chart(chart) }}
        </script>
        <script>
            $(document).ready(function () {
                var base_url = window.location.origin;
                $('#row_id').hide();
                $('#commentform').hide();
                $('#addcomment').hide();
                $('#mailform').hide();
                $('#viewcommentdiv').hide();
                $('#livesearchdiv').hide();
                $('#hidecomment').hide();

                $('#showcommentform').click(function ($e) {
                    $e.preventDefault();
                    $('#usermycommentid').val(' ');
                    $('#buttonid').show();
                    $('#viewcommentdiv').hide();
                    $('#commentform').show();
                    $('#mailform').hide();
                    $('#usermycommentid').focus();


                });
                $('#sendreports').click(function ($e) {
                    $e.preventDefault();
                    $('#commentform').hide();
                    $('#mailform').show();
                    $('#viewcommentdiv').hide();


                });
                $('#viewcomment').click(function ($e) {
                    $e.preventDefault();
                    $('#mailform').hide();
                    $('#commentform').hide();
                    $('#viewcommentdiv').show();
                    $('#viewcomment').hide();
                    $('#hidecomment').show();

                });
                $('#hidecomment').click(function ($e) {
                    $e.preventDefault();
                    $('#mailform').hide();
                    $('#commentform').hide();
                    $('#viewcommentdiv').hide();
                    $('#viewcomment').show();
                    $('#hidecomment').hide();
                    $('#buttonid').show();
                });
                $('#toemail').keyup(function ($e) {
                    $e.preventDefault();
                    var searchstring = $(this).val();
                    var data = {searchstring: searchstring};
                    $.ajaxSetup({
                        global: false,
                        type: "post",
                        url: Routing.generate('autocompleteformailing'),
                        beforeSend: function () {

                        }
                    });
                    $.ajax({
                        data: data,
                        success: function (data) {
                            if ($.isArray(data.returnresult)) {
                                $.each(data.returnresult, function (i, listelemnt) {
                                    $('#hiddenresult').val(data.returnresult);
                                    $('#livesearchdiv').show();
                                    $("#livesearch").show();
                                    $("#livesearch").html('<li class="dynamiclabel">' + listelemnt.groupname + '</li><li class="dynamiclabel">' + listelemnt.useremailid + '</li>');
                                });
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            window.location.href = base_url+'/login';
                        }
                    });
                });

                $(".dynamiclabel").live("click", function ($e) {
                    $e.preventDefault();
                    var b = $(this).text();
                    $('#toemail').val(b);
                    $('#livesearchdiv').hide();
                });
                $('#mycommentid').click(function ($e) {
                    $e.preventDefault();
                    $('#livesearchdiv').hide();
                });
                $('#mycommentid').focus(function ($e) {
                    $e.preventDefault();
                    $('#livesearchdiv').hide();
                });

                $('#addcommentid').click(function ($e) {
                    $e.preventDefault();
                    var kpiid = $('#kpiidforname').val();
                    var comment = $('#usermycommentid').val();
                    if (comment == ' ') {
                        jAlert('', 'Enter Comment!!!');
                        $('#usermycommentid').focus();
                    }
                    else {

                        var data = {kpiid: kpiid, comment: comment};
                        $.ajaxSetup({
                            global: false,
                            type: "post",
                            url: Routing.generate('runtimecommentforkpi'),
                            beforeSend: function () {
                                var setAjaxBeforeSend = defaultAjaxBeforeSendFunction();
                            },
                            complete: function () {
                                var setAjaxComplete = defaultAjaxCompleteFunction();
                            }
                        });
                        $.ajax({
                            data: data,
                            success: function (data) {
                                $('#usermycommentid').val(' ');
                                $('#commentform').hide();
                                var a = data.lastinsertid;
                                $('#lastid').val(a);
                                $('#viewcommentdiv').text('');
                                if ($.isArray(data.resultarray)) {
                                    $.each(data.resultarray, function (i, listelemnt) {
                                        var dataObj = JSON.stringify(listelemnt.datetime);
                                        var jsonobject = JSON.parse(dataObj);
                                        var myDate = new Date(jsonobject.date.replace(/-/g, "/"));
                                        var d = myDate,
                                                dformat = [(d.getMonth() + 1).padLeft(),
                                                            d.getDate().padLeft(),
                                                            d.getFullYear()].join('-') +
                                                        ' ' +
                                                        [d.getHours().padLeft(),
                                                            d.getMinutes().padLeft(),
                                                            d.getSeconds().padLeft()].join(':');
                                        $('<p><strong>' + listelemnt.username + ': ' + dformat + '</strong>:' + listelemnt.comment + '</p>').appendTo("#viewcommentdiv");
                                    });
                                }
                                $('#commentandreportdiv').hide();
                                $('#buttonid').show();
                                $('#viewcomment').show();
                                $('#hidecomment').hide();
                                $('#notifcation_message').text('Comment Added');
                                $('#notifcation_message').show();
                                setTimeout(function () {
                                    $('#notifcation_message').fadeOut('fast');
                                }, 7000)
                            }
                            ,
                            error: function (XMLHttpRequest, textStatus, errorThrown) {

                                window.location.href = base_url+'/login';
                            }
                        });
                    }


                });

                $('#chatform').submit(function (e) {
                    e.preventDefault();
                    var self = this;
                    var obj = {}, chart;
                    chart = $('#area').highcharts();
                    obj.svg = chart.getSVG();
                    obj.type = 'image/png';
                    obj.width = 450;
                    obj.async = true;
                    var data = {svgid: obj.svg, typeid: obj.type, filewidth: obj.width, fileanys: obj.async};
                    $.ajaxSetup({
                        global: false,
                        type: "post",
                        url: Routing.generate('addchart')
                    });
                    $.ajax({
                        data: data,
                        success: function (data) {
                            $('#imagefilename').val(data);
                            submitchatform();
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            window.location.href = base_url+'/login';
                        }
                    });
                });

                function submitchatform() {

                    var form = $('#chatform');
                    $.ajaxSetup({
                        global: false,
                        type: "post",
                        url: Routing.generate('addcommentkpi_scorecard'),
                        beforeSend: function () {
                            var text = '';

                            if ($('body').find('#resultLoading').attr('id') != 'resultLoading') {
                                $('body').append('<div id="resultLoading" style="display:none"><div><img src="/images/ajax-loader.gif"><div>' + text + '</div></div><div class="bg"></div></div>');
                            }

                            $('#resultLoading').css({
                                'width': '100%',
                                'height': '100%',
                                'position': 'fixed',
                                'z-index': '10000000',
                                'top': '0',
                                'left': '0',
                                'right': '0',
                                'bottom': '0',
                                'margin': 'auto'
                            });

                            $('#resultLoading .bg').css({
                                'background': '#000000',
                                'opacity': '0.7',
                                'width': '100%',
                                'height': '100%',
                                'position': 'absolute',
                                'top': '0'
                            });

                            $('#resultLoading>div:first').css({
                                'width': '250px',
                                'height': '75px',
                                'text-align': 'center',
                                'position': 'fixed',
                                'top': '0',
                                'left': '0',
                                'right': '0',
                                'bottom': '0',
                                'margin': 'auto',
                                'font-size': '16px',
                                'z-index': '10',
                                'color': '#ffffff'

                            });

                            $('#resultLoading .bg').height('100%');
                            $('#resultLoading').fadeIn(300);
                            $('body').css('cursor', 'wait');
                        },
                        complete: function () {
                            $('#resultLoading .bg').height('100%');
                            $('#resultLoading').fadeOut(300);
                            $('body').css('cursor', 'default');
                        }
                    });
                    $.ajax({
                        data: form.serialize(),
                        success: function (data) {
                            $('#commentform').hide();
                            $('#mailform').hide();
                            $('#addcomment').hide();
                            $('#notifcation_message').text(data.updatemsg);
                            $('#notifcation_message').show();
                            setTimeout(function () {
                                $('#notifcation_message').fadeOut('fast');
                            }, 7000)
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            window.location.href = base_url+'/login';
                        }
                    });
                };

                var elements = [];
                var k = 0;
                {% for element in listofelement %}

                elements.push(['{{ element.elementName }}', '{{ element.id }}']);
                var abcdef = '{{ element.elementName }}';
                var rule_value = $('#' +{{ element.id }}).val();
                var rule_value_array = splitfun(rule_value);

                if (rule_value != null) {
                    $('<div class="rules_valus" id="rules_valus_id' + k + '" >').appendTo('#rulePlaceId');
                    $('<div class="title">' + abcdef + '</div>').appendTo('#rules_valus_id' + k);

                    $.each(rule_value_array, function (i) {
                        var condition_text = "";
                        var rule_obj = JSON.parse(rule_value_array[i]);

                        $.each(rule_obj.conditions.all, function (j) {
                            if (rule_obj.conditions.all[j].operator == 'equalTo') {
                                rule_obj.conditions.all[j].operator = '=';
                            }
                            else if (rule_obj.conditions.all[j].operator == 'notEqualTo') {
                                rule_obj.conditions.all[j].operator = '!=';
                            }
                            else if (rule_obj.conditions.all[j].operator == 'greaterThan') {
                                rule_obj.conditions.all[j].operator = '>';
                            }
                            else if (rule_obj.conditions.all[j].operator == 'greaterThanEqual') {
                                rule_obj.conditions.all[j].operator = '>=';
                            }
                            else if (rule_obj.conditions.all[j].operator == 'lessThan') {
                                rule_obj.conditions.all[j].operator = '<';
                            }
                            else if (rule_obj.conditions.all[j].operator == 'lessThanEqual') {
                                rule_obj.conditions.all[j].operator = '<=';
                            }
                            var condition_text_one = rule_obj.conditions.all[j].operator + rule_obj.conditions.all[j].value;
                            if (j == 0) {
                                condition_text = condition_text_one;
                            }
                            if (j > 0) {
                                condition_text = condition_text + '   ' + '&&' + '   ' + condition_text_one;
                            }
                        });
                        $('<div ><span class="span_1">' + condition_text + '</span><span class="span_1">' + rule_obj.actions.value + '</span></div>').appendTo('#rules_valus_id' + k);

                    });

                    $('</div>');
                }

                k++;
                {% endfor %}

                var kpiRulesShow = $('.KpiRulesShow');
                kpiRulesShow.hide();
                $('.myFuncKpiRulesShow').live("click", function ($e) {
                    $e.preventDefault();
                    if(toggleRulesStatus==0 && toggleOriginalDataStatus ==0) {
                        toggleRulesStatus=1;
                        kpiRulesShow.toggle();
                    } else if(toggleRulesStatus==0 && toggleOriginalDataStatus ==1){
                        kpiRulesShow.toggle();
                        originalDataTableClass.toggle();
                        toggleRulesStatus=1;
                        toggleOriginalDataStatus=0;
                    } else {
                        kpiRulesShow.toggle();
                        toggleRulesStatus=0;
                    }
                });

                $('#rule_row_id').hide();

                function splitfun(data) {
                    var result = data.split('*');
                    return result;
                }

                var Example = (function () {
                    "use strict";
                    var elem,
                            hideHandler,
                            that = {};
                    that.init = function (options) {
                        elem = $(options.selector);
                    };

                    that.show = function (text) {
                        clearTimeout(hideHandler);
                        elem.find("span").html(text);
                        elem.delay(200).fadeIn().delay(4000).fadeOut();
                    };

                    return that;
                }());
                Number.prototype.padLeft = function (base, chr) {
                    var len = (String(base || 10).length - String(this).length) + 1;
                    return len > 0 ? new Array(len).join(chr || '0') + this : this;
                };

                /*------------------------------Element original values show coding----------------------------------*/

                var monthNumber;
                var toggleRulesStatus = 0;
                var toggleOriginalDataStatus = 0;
                var elementOriginalValuesClass = $('.element-original-values-class');
                var originalDataTableClass = $('.original-data-table');
                originalDataTableClass.hide();
                elementOriginalValuesClass.click(function($e) {
                    $e.preventDefault();
                    var data = {
                        monthNumber:{{ monthInNumber }},
                        kpiDetailsId:{{ kpiid }}
                    };
                    $.ajaxSetup({
                        global: false,
                        type:"POST",
                        url:"find_element_original_value",/*Routing.generate('find_element_original_value'),*/
                        data:data,
                        beforeSend: function () {
                            var setAjaxBeforeSend = defaultAjaxBeforeSendFunction();
                        },
                        complete: function () {
                            var setAjaxComplete = defaultAjaxCompleteFunction();
                        }
                    });
                    $.ajax({
                        success: function(data) {
                            monthNumber = data.monthNumber;
                            originalDataTableClass.empty();
                            $('<thead><tr><th>{{ kpiname }}</th><th id="month-name-head" style="text-align: right" colspan="16"><a style="cursor: pointer" class="previous-month left-arrow ss-navigateleft">&nbsp;</a>'+data.monthName+'<a style="cursor: pointer" class="next-month right-arrow ss-navigateright">&nbsp;</a></th></tr><tr id="original-data-head-row" class="v_r_min_height"><th class="kpi_lement_name"></th><th class="kpi_weightage"><div class="verfication_ranking_text_rotation_2">Weightage</div></th></tr></thead>').appendTo(originalDataTableClass);
                            $.each(data.shipDetail, function(i,ship) {
                                $('<th class="kpi_ship "><div class="verfication_ranking_text_rotation_2">'+ship.shipName+'</div></th>').appendTo($('#original-data-head-row'));
                            });
                            $('<tbody class="original-table-body"></tbody>').appendTo(originalDataTableClass);
                            var row_count = 0;
                            {% for element in listofelement %}
                            $('<tr id="body-row-id-'+row_count+'"><td class="kpi_lement_name kpi_lement_name">{{ element.elementName }}</td><td>{{ element.weightage }}</td></tr>').appendTo($('.original-table-body'));
                            $.each(data.elementOriginalValues, function(j,value) {
                                $('<td>'+value[row_count]+'</td>').appendTo($('#body-row-id-'+row_count+''));
                            });
                            row_count++;
                            {% endfor %}
                            if(toggleRulesStatus==0 && toggleOriginalDataStatus ==0) {
                                toggleOriginalDataStatus=1;
                                originalDataTableClass.toggle();
                            } else if(toggleRulesStatus==1 && toggleOriginalDataStatus ==0){
                                kpiRulesShow.toggle();
                                originalDataTableClass.toggle();
                                toggleRulesStatus=0;
                                toggleOriginalDataStatus=1;
                            } else {
                                originalDataTableClass.toggle();
                                toggleOriginalDataStatus=0;
                            }
                        },
                        error: function(XMLHttpRequest, textStatus, errorThrown) {
                            alert('Error : ' + errorThrown);
                        }
                    });
                });

                var previousMonth = $('.previous-month');
                var nextMonth = $('.next-month');
                previousMonth.live("click",function($e) {
                    if(monthNumber-1>=1) {
                        var data = {
                            monthNumber:monthNumber-1,
                            kpiDetailsId:{{ kpiid }}
                        };
                        $.ajaxSetup({
                            global: false,
                            type:"POST",
                            url:"previous_month_element_original_value",/*Routing.generate('previous_month_element_original_value'),*/
                            data:data,
                            beforeSend: function () {
                                var setAjaxBeforeSend = defaultAjaxBeforeSendFunction();
                            },
                            complete: function () {
                                var setAjaxComplete = defaultAjaxCompleteFunction();
                            }
                        });
                        $.ajax({
                            success: function(data) {
                                monthNumber = data.monthNumber;
                                var originalTableBody = $('.original-table-body');
                                var monthNameHead = $('#month-name-head');
                                originalTableBody.empty();
                                monthNameHead.empty();
                                $('<a style="cursor: pointer" class="previous-month left-arrow ss-navigateleft">&nbsp;</a>'+data.monthName+'<a style="cursor: pointer" class="next-month right-arrow ss-navigateright">&nbsp;</a>').appendTo(monthNameHead);
                                var row_count = 0;
                                {% for element in listofelement %}
                                $('<tr id="body-row-id-'+row_count+'"><td class="kpi_lement_name kpi_lement_name">{{ element.elementName }}</td><td>{{ element.weightage }}</td></tr>').appendTo(originalTableBody);
                                $.each(data.elementOriginalValues, function(j,value) {
                                    $('<td>'+value[row_count]+'</td>').appendTo($('#body-row-id-'+row_count+''));
                                });
                                row_count++;
                                {% endfor %}
                            },
                            error: function(XMLHttpRequest, textStatus, errorThrown) {
                                alert('Error : ' + errorThrown);
                            }
                        });
                    } else {
                        alert('This is the first month of this year');
                    }
                });

                nextMonth.live("click",function($e) {
                    var num = {{ monthInNumber }};
                    if(parseInt(monthNumber)+1<=parseInt(num)) {
                        var data = {
                            monthNumber:parseInt(monthNumber)+1,
                            kpiDetailsId:{{ kpiid }}
                        };
                        $.ajaxSetup({
                            global: false,
                            type:"POST",
                            url:"previous_month_element_original_value",/*Routing.generate('previous_month_element_original_value'),*/
                            data:data,
                            beforeSend: function () {
                                var setAjaxBeforeSend = defaultAjaxBeforeSendFunction();
                            },
                            complete: function () {
                                var setAjaxComplete = defaultAjaxCompleteFunction();
                            }
                        });
                        $.ajax({
                            success: function(data) {
                                monthNumber = data.monthNumber;
                                var originalTableBody = $('.original-table-body');
                                var monthNameHead = $('#month-name-head');
                                originalTableBody.empty();
                                monthNameHead.empty();
                                $('<a style="cursor: pointer" class="previous-month left-arrow ss-navigateleft">&nbsp;</a>'+data.monthName+'<a style="cursor: pointer" class="next-month right-arrow ss-navigateright">&nbsp;</a>').appendTo(monthNameHead);
                                var row_count = 0;
                                {% for element in listofelement %}
                                $('<tr id="body-row-id-'+row_count+'"><td class="kpi_lement_name kpi_lement_name">{{ element.elementName }}</td><td>{{ element.weightage }}</td></tr>').appendTo(originalTableBody);
                                $.each(data.elementOriginalValues, function(j,value) {
                                    $('<td>'+value[row_count]+'</td>').appendTo($('#body-row-id-'+row_count+''));
                                });
                                row_count++;
                                {% endfor %}
                            },
                            error: function(XMLHttpRequest, textStatus, errorThrown) {
                                alert('Error : ' + errorThrown);
                            }
                        });
                    } else {
                        alert('This is current month value');
                    }
                });
            });

        </script>

    {% endblock %}
    <div class="col-md-12 users_advanced_list_views_screen">
        <div class="table-responsive">
            <table class="table table-striped graph_and_colour_coding_main_title_row">
                <thead>
                    <tr>
                        <th>{{ kpiname }}</th>
                    </tr>
                </thead>
                <tbody>
                <tr>
                    <td>
                        <a class="linkclass" href="{{ path('dashboardhome') }}" style="float: right">Back</a>
                    </td>
                </tr>
                </tbody>
            </table>
            <table class="table table-striped-2 graph_and_colour_coding_row">
                <thead>
                {% set i1=0 %}
                <tr>
                    <th class="kpi_name kpi_name_thtd">Element</th>
                    <th class="weightage">Weightage</th>
                    {% for monthname in montharray %}
                        <th class="month">{{ monthname }}</th>
                        {% if i1 != 2 %}
                            <th class="month_difference">&nbsp;</th>
                        {% endif %}
                        {% set i1 = i1+1 %}
                    {% endfor %}
                </tr>
                </thead>
                <tbody>
                {% set countmonth1= countmonth-1 %}
                {% set newelementarray = {} %}
                {% set newcolorarray = {} %}
                {% set akj=0 %}
                {% set i=0 %}
                {% for element in listofelement %}
                    {% set newelementarray = newelementarray|merge({('_'~i):(element.elementName)}) %}
                    <tr>
                        <td class="kpi_name_thtd">{{ element.elementName }}</td>
                        <td>{{ element.weightage }}</td>
                        {% for j in 0..countmonth1 %}
                            <td>
                                {% set newcolorarray = newcolorarray|merge({('_'~akj):(elementcolorarray[j][i])}) %}
                                {% if elementcolorarray[j][i]=="Green" %}
                                    <img class="img-icon" src="/images/01_score_card.png" alt="Loader Image"/>
                                {% elseif elementcolorarray[j][i]=="Red" %}
                                    <img class="img-icon" src="/images/03_score_card.png" alt="Loader Image"/>
                                {% elseif elementcolorarray[j][i]=="Yellow" %}
                                    <img class="img-icon" src="/images/02_score_card.png" alt="Loader Image"/>
                                {% endif %}
                            </td>
                            {% if j != 2 %}
                                {% set j1=j+1 %}
                                <td>
                                    {% if elementcolorarray[j][i]=="Green" and elementcolorarray[j1][i]=="Green" %}
                                        <img class="img-status-icon" src="/images/straight_arrow.png">
                                    {% elseif elementcolorarray[j][i]=="Green" and elementcolorarray[j1][i]=="Red" %}
                                        <img class="img-status-icon" src="/images/down_arrow.png">
                                    {% elseif elementcolorarray[j][i]=="Green" and elementcolorarray[j1][i]=="Yellow" %}
                                        <img class="img-status-icon" src="/images/down_arrow.png">
                                    {% elseif elementcolorarray[j][i]=="Red" and elementcolorarray[j1][i]=="Green" %}
                                        <img class="img-status-icon" src="/images/up_arrow.png">
                                    {% elseif elementcolorarray[j][i]=="Red" and elementcolorarray[j1][i]=="Red" %}
                                        <img class="img-status-icon" src="/images/straight_arrow.png">
                                    {% elseif elementcolorarray[j][i]=="Red" and elementcolorarray[j1][i]=="Yellow" %}
                                        <img class="img-status-icon" src="/images/up_arrow.png">
                                    {% elseif elementcolorarray[j][i]=="Yellow" and elementcolorarray[j1][i]=="Green" %}
                                        <img class="img-status-icon" src="/images/up_arrow.png">
                                    {% elseif elementcolorarray[j][i]=="Yellow" and elementcolorarray[j1][i]=="Red" %}
                                        <img class="img-status-icon" src="/images/down_arrow.png">
                                    {% elseif elementcolorarray[j][i]=="Yellow" and elementcolorarray[j1][i]=="Yellow" %}
                                        <img class="img-status-icon" src="/images/straight_arrow.png">
                                    {% endif %}
                                </td>
                            {% endif %}
                            {% set akj=akj+1 %}
                        {% endfor %}
                    </tr>
                    {% set i=i+1 %}
                {% endfor %}
                </tbody>
            </table>
            <table class="table table-striped-2 graph_and_colour_coding_row">
                {% set k=0 %}
                <tr>
                    <td class="kpi_name kpi_name_thtd"><strong>{{ kpiname }}</strong></td>
                    <td class="weightage"><strong>100</strong></td>
                    {% for kpi_colors_first in kpi_color %}
                        {% for kpi_colors in kpi_colors_first %}
                            <td class="month">
                                {% if kpi_colors_first[0] =="Green" %}
                                    <img class="img-icon" src="/images/01_score_card.png" alt="Loader Image"/>
                                {% elseif kpi_colors_first[0] =="Red" %}
                                    <img class="img-icon" src="/images/03_score_card.png" alt="Loader Image"/>
                                {% elseif kpi_colors_first[0] =="Yellow" %}
                                    <img class="img-icon" src="/images/02_score_card.png" alt="Loader Image"/>
                                {% endif %}
                            </td>
                            {% if k != 2 %}
                                {% set k1=0 %}
                                <td class="month_difference">
                                    {% if kpi_colors=="Green" and kpi_color[k+1][k1]=="Green" %}
                                        <img class="img-status-icon" src="/images/straight_arrow.png">
                                    {% elseif kpi_colors=="Green" and kpi_color[k+1][k1]=="Red" %}
                                        <img class="img-status-icon" src="/images/down_arrow.png">
                                    {% elseif kpi_colors=="Green" and kpi_color[k+1][k1]=="Yellow" %}
                                        <img class="img-status-icon" src="/images/down_arrow.png">
                                    {% elseif kpi_colors=="Red" and kpi_color[k+1][k1]=="Green" %}
                                        <img class="img-status-icon" src="/images/up_arrow.png">
                                    {% elseif kpi_colors=="Red" and kpi_color[k+1][k1]=="Red" %}
                                        <img class="img-status-icon" src="/images/straight_arrow.png">
                                    {% elseif kpi_colors=="Red" and kpi_color[k+1][k1]=="Yellow" %}
                                        <img class="img-status-icon" src="/images/up_arrow.png">
                                    {% elseif kpi_colors=="Yellow" and kpi_color[k+1][k1]=="Green" %}
                                        <img class="img-status-icon" src="/images/up_arrow.png">
                                    {% elseif kpi_colors=="Yellow" and kpi_color[k+1][k1]=="Red" %}
                                        <img class="img-status-icon" src="/images/down_arrow.png">
                                    {% elseif kpi_colors=="Yellow" and kpi_color[k+1][k1]=="Yellow" %}
                                        <img class="img-status-icon" src="/images/straight_arrow.png">
                                    {% endif %}
                                </td>
                            {% endif %}
                            {% set k=k+1 %}
                        {% endfor %}
                    {% endfor %}
                </tr>
            </table>

            <div>
                {% set newcommandarray = {} %}
                {% set jk=0 %}
                {% set ik=0 %}
                {% for kpiRules in elementRule %}
                    {% for kpi_rules in kpiRules %}
                        {% set newcommandarray = newcommandarray|merge({('_'~jk):(kpi_rules.rules)}) %}
                        {% set jk=jk+1 %}
                    {% endfor %}
                    {% if elementRule[ik] != NULL %}
                        {% if elementRule[ik][0]['rules']  != NULL %}
                            <input type="hidden" name="listofcomments"
                                   id={{ listofelement[ik]['id'] }} value="{{ newcommandarray|join('*') }}">
                        {% else %}
                            <input type="hidden" name="listofcomments" id="" value="{{ newcommandarray|join('*') }}">
                        {% endif %}
                    {% endif %}
                    {% set ik=ik+1 %}
                    {% set newcommandarray = {} %}
                {% endfor %}
            </div>

            <div class="rules_ranking">
                <a class="rules_show_btn myFuncKpiRulesShow" href="">Rules</a>
                <a class="rules_show_btn element-original-values-class" style="cursor: pointer">Original values</a>
            </div>
            <table class="table table-striped-4 kpi_ranking_rules_show_row KpiRulesShow">
                <thead>
                    <tr>
                        <th colspan="3">Rules</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td id="rulePlaceId" class="rulePlace"></td>
                    </tr>
                </tbody>
            </table>

            <table class="table verfication_ranking_table_form_section original-data-table" style="margin-bottom: 20px;"></table>

            <table class="table table-striped normal_table">
                <thead>
                <tr>
                    <th>{{ kpiname }}</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td id="area"></td>
                </tr>
                </tbody>
            </table>
            <table class="table table-striped normal_table graph_comment">
                <tbody>
                <tr>
                    <td id="viewcommentdiv">
                        {% if commentarray|length <= 0 %}
                            {{ 'elementranking.nocommands'|trans }}
                        {% endif %}
                        {% if commentarray|length > 0 %}
                            {% for comobject in commentarray %}
                                <p>
                                    <strong>{{ comobject.username }}-{{ comobject.datetime|date('m-d-Y H:i:s') }}:</strong>
                                    {{ comobject.comment }}
                                </p>
                            {% endfor %}
                        {% endif %}
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
        <span class="notification_msg" id="notifcation_message"></span>
        <div class="clear_fix"></div>
        <div class="graph_send_comment">
            <div id="buttonid">
                <button value="Submit" id="showcommentform"
                        class="submit_btn_add">{{ 'elementranking.addcomment'|trans }}</button>
                <button value="Submit" id="sendreports"
                        class="submit_btn_add">{{ 'elementranking.sendreport'|trans }}</button>
                <button value="Submit" id="viewcomment"
                        class="submit_btn_add">{{ 'elementranking.viewcomment'|trans }}</button>
                <button value="Submit" id="hidecomment"
                        class="submit_btn_add">{{ 'elementranking.hidecomment'|trans }}</button>
            </div>
        </div>
        <div class="add_new_users_form">
            <!--Form for Add comment Starts Here  -->
            <fieldset id="commentform" class="fieldset_box_2">
                <legend class="legend_name">{{ 'elementranking.addcomment'|trans }}</legend>
                <form class="form-horizontal no-style" method="post">
                    <input id="kpiidforname" type="hidden" name="send_command[kpiid] " value="{{ kpiid }}">
                    <div class="form-group">
                        <div class="col-xs-12">
                            <textarea id="usermycommentid" class="add_comment_textarea" placeholder="Enter Comment Here" name="send_command[comment]" required></textarea>
                        </div>
                    </div>
                    <input class="submit_btn_save" id="addcommentid" type="submit" value="{{ 'elementranking.save'|trans }}">
                </form>
            </fieldset>
            <!--Form for Add comment Ends Here  -->
            <!--Form for Send Reports Starts Here  -->
            <fieldset id="mailform" class="fieldset_box_2">
                <legend class="legend_name">{{ 'elementranking.sendreport'|trans }}</legend>
                <form id="chatform" class="form-horizontal no-style" method="post">
                    <input id="imagefilename" type="hidden" name="send_command[filename]">
                    <input id="lastid" type="hidden" name="send_command[lastid]">
                    <input id="kpiidforname" type="hidden" name="send_command[kpiid] " value="{{ kpiid }}">
                    <div class="form-group">
                        <label class="control-label  col-xs-3">{{ 'elementranking.addcomment'|trans }}</label>
                        <div class="col-xs-9">
                            <div class="add_comment_checkbox">
                                <label>
                                    <input type="checkbox" name="send_command[addcomment]" class="inline-checkbox" value="Yes"> {{ 'elementranking.yes'|trans }}
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label required_field col-xs-3">{{ 'elementranking.to'|trans }}</label>
                        <div class="col-xs-9">
                            <input id="toemail" type="text" class="send_reports_to_input" name="send_command[clientemail]" required>
                            <div id="livesearchdiv" class="send_reports_to_input_list">
                                <ul id="livesearch"></ul>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label required_field col-xs-3">{{ 'elementranking.mailbox'|trans }}</label>
                        <div class="col-xs-9">
                            <textarea id="mycommentid" name="send_command[comment]" required class="add_comment_textarea" placeholder="Enter comment here"></textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-xs-3">&nbsp;</label>
                        <div class="col-xs-9">
                            <input id="" class="submit_btn_2" type="submit" value="{{ 'elementranking.sendreport'|trans }}">
                        </div>
                    </div>
                </form>
            </fieldset>
            {# <a href="{{ path('scorecard_report_pdfReport_mail',{ 'activeMonth': appsCountry.id }) }}">link-check</a>#}
            <!--Form for Send Reports Ends Here  -->
        </div>
    </div>
{% endblock %}