
{% extends 'base.html.twig' %}
{% block body %}
    {% block javascripts %}
        {% javascripts '@InitialShippingBundle/Resources/public/js/aa_jquery-1.8.0.min.js' %}
        <script src="{{ asset_url }}"></script>
        {% endjavascripts %}
        {% javascripts '@InitialShippingBundle/Resources/public/js/highchart/highcharts.js' %}
        <script src="{{ asset_url }}"></script>
        {% endjavascripts %}
        {% javascripts '@InitialShippingBundle/Resources/public/js/highchart/exporting.js' %}
        <script src="{{ asset_url }}"></script>
        {% endjavascripts %}
        {% javascripts '@InitialShippingBundle/Resources/public/js/highchart/svg.min.js' %}
        <script src="{{ asset_url }}"></script>
        {% endjavascripts %}
        {% javascripts '@InitialShippingBundle/Resources/public/js/bootstrap.min.js' %}
        <script src="{{ asset_url }}"></script>
        {% endjavascripts %}
        <script>
            Highcharts.createElement('link', {
                href: 'https://fonts.googleapis.com/css?family=Dosis:400,600',
                rel: 'stylesheet',
                type: 'text/css'
            }, null, document.getElementsByTagName('head')[0]);
            Highcharts.theme = {
                colors: ["#7cb5ec", "#f7a35c", "#90ee7e", "#7798BF", "#aaeeee", "#ff0066", "#eeaaee",
                    "#55BF3B", "#DF5353", "#7798BF", "#aaeeee"],
                chart: {
                    backgroundColor: null,
                    style: {
                        fontFamily: "Dosis, sans-serif"
                    }
                },
                title: {
                    style: {
                        fontSize: '16px',
                        fontWeight: 'bold',
                        textTransform: 'uppercase'
                    }
                },
                tooltip: {
                    borderWidth: 0,
                    backgroundColor: 'rgba(219,219,216,0.8)',
                    shadow: false
                },
                legend: {
                    itemStyle: {
                        fontWeight: 'bold',
                        fontSize: '13px'
                    }
                },
                xAxis: {
                    gridLineWidth: 1,
                    labels: {
                        style: {
                            fontSize: '12px'
                        }
                    }
                },
                yAxis: {
                    minorTickInterval: 'auto',
                    title: {
                        style: {
                            textTransform: 'uppercase'
                        }
                    },
                    labels: {
                        style: {
                            fontSize: '12px'
                        }
                    }
                },
                plotOptions: {
                    candlestick: {
                        lineColor: '#404048'
                    }
                },


                // General
                background2: '#F0F0EA'

            };
            Highcharts.setOptions(Highcharts.theme);
        </script>
        <script type="text/javascript">
            {{ chart(chart) }}
        </script>
        <script>
            $(document).ready(function()
            {
                var base_url = window.location.origin;
                $('#commentform').hide();
                $('#mailform').hide();
                $('#addcomment').hide();
                $('#viewcommentdiv').hide();
                $('#hidecomment').hide();
                $('#commentandreportdiv').hide();
                $('#elementweightage').hide();

                $('#showcommentform').click(function()
                {
                    $('#mailform').hide();
                    $('#viewcommentdiv').hide();
                    $('#commentandreportdiv').show();
                    $('#commentform').show();
                    $('#usermycommentid').focus();
                    $('#buttonid').show();
                    $('#usermycommentid').val(' ');
                });

                $('#viewcomment').click(function()
                {
                    $('#mailform').hide();
                    $('#commentandreportdiv').hide();
                    $('#commentform').hide();
                    $('#viewcommentdiv').show();
                    $('#viewcomment').hide();
                    $('#hidecomment').show();

                });
                $('#hidecomment').click(function()
                {
                    $('#mailform').hide();
                    $('#commentform').hide();
                    $('#commentandreportdiv').hide();
                    $('#viewcommentdiv').hide();
                    $('#viewcomment').show();
                    $('#hidecomment').hide();
                    $('#buttonid').show();

                });
                $('#sendreports').click(function()
                {
                    $('#viewcommentdiv').hide();
                    $('#commentform').hide();
                    $('#commentandreportdiv').show();
                    $('#mailform').show();
                    $('#livesearchdiv').hide();
                    $('#buttonid').show();



                });
                var k = 0;
                {% for element in listofelement %}

                var abcdef='{{ element.elementName }}';

                $('<div class="rules_valus" id="rules_valus_id'+k+'" >').appendTo('#rulePlaceId');
                $('<div class="title">'+abcdef+'</div>').appendTo('#rules_valus_id'+k);
                var rule_value = $('#'+{{ element.id }}).val();

                if(rule_value  != null  )
                {
                    var rule_value_array = splitfun(rule_value);

                    $.each(rule_value_array,function(i)
                    {
                        var condition_text = "";
                        var rule_obj = JSON.parse(rule_value_array[i]);

                        $.each(rule_obj.conditions.all, function(j)
                        {
                            if(rule_obj.conditions.all[j].operator=='equalTo')
                            {
                                rule_obj.conditions.all[j].operator='=';
                            }
                            else if(rule_obj.conditions.all[j].operator=='notEqualTo')
                            {
                                rule_obj.conditions.all[j].operator='!=';
                            }
                            else if(rule_obj.conditions.all[j].operator=='greaterThan')
                            {
                                rule_obj.conditions.all[j].operator='>';
                            }
                            else if(rule_obj.conditions.all[j].operator=='greaterThanEqual')
                            {
                                rule_obj.conditions.all[j].operator='>=';
                            }
                            else if(rule_obj.conditions.all[j].operator=='lessThan')
                            {
                                rule_obj.conditions.all[j].operator='<';
                            }
                            else if(rule_obj.conditions.all[j].operator=='lessThanEqual')
                            {
                                rule_obj.conditions.all[j].operator='<=';
                            }
                            var condition_text_one =rule_obj.conditions.all[j].operator+rule_obj.conditions.all[j].value;
                            if(j==0)
                            {
                                condition_text = condition_text_one;
                            }
                            if(j>0)
                            {
                                condition_text = condition_text+'   ' + '&&' +'   '+condition_text_one;
                            }
                        });
                        $('<div ><span class="span_1">'+condition_text+'</span><span class="span_1">'+rule_obj.actions.value+'</span></div>').appendTo('#rules_valus_id'+k);

                    });
                }

                $('</div>');
                k++;
                {% endfor %}

                function splitfun(data){
                    var result = data.split('*');
                    return result;
                }

                $('#toemail').keyup(function($e)
                {
                    $e.preventDefault();
                    var searchstring=$(this).val();
                    var data = {searchstring :searchstring} ;
                    $.ajaxSetup({
                        global: false,
                        type: "post",
                        url:Routing.generate('autocompleteformailing'),
                    });
                    $.ajax({
                        data: data,
                        success: function (data)
                        {

                            if($.isArray(data.returnresult))
                            {
                                $.each(data.returnresult, function(i, listelemnt)
                                {
                                    $('#hiddenresult').val(data.returnresult);
                                    $('#commentandreportdiv').show();
                                    $('#livesearchdiv').show();
                                    $("#livesearch").show();
                                    $("#livesearch").html('<li class="dynamiclabel">' + listelemnt.groupname + '</li><li class="dynamiclabel">' + listelemnt.useremailid + '</li>');

                                });

                            }



                        }
                        ,
                        error: function()
                        {
                            window.location.href = base_url+'/login';

                        }
                    });

                });

                $(".dynamiclabel").live("click",function($e)
                {
                    $e.preventDefault();
                    var b=$(this).text();
                    $('#toemail').val(b);
                    $('#livesearchdiv').hide();
                });

                $('#addcommentid').click(function($e)
                {
                    $e.preventDefault();
                    var kpiid=$('#kpiidforname').val();
                    var comment=$('#usermycommentid').val();
                    if(comment!=' ')
                    {
                        var data = {kpiid :kpiid,comment:comment} ;
                        $.ajaxSetup({
                            global: false,
                            type: "post",
                            url: Routing.generate('addcomment_ranking_ship'),
                            beforeSend: function ()
                            {
                                var beforsend=ajaxbefore_send();
                            },
                            complete: function () {
                                var complete=ajax_complete();
                            }
                        });
                        $.ajax({
                            data: data,
                            success: function (data)
                            {
                                $('#usermycommentid').val(' ');
                                $('#commentform').hide();
                                var a=data.lastinsertid;
                                $('#lastid').val(a);
                                $('#viewcommentdiv').text('');
                                if($.isArray(data.resultarray))
                                {
                                    // alert('if');
                                    $.each(data.resultarray, function(i, listelemnt)
                                    {
                                        var dataObj = JSON.stringify(listelemnt.datetime);
                                        var jsonobject=JSON.parse(dataObj);
                                        var myDate = new Date(jsonobject.date.replace(/-/g,"/"));
                                        var d = myDate,
                                                dformat = [ (d.getMonth()+1).padLeft(),
                                                            d.getDate().padLeft(),
                                                            d.getFullYear()].join('-')+
                                                        ' ' +
                                                        [ d.getHours().padLeft(),
                                                            d.getMinutes().padLeft(),
                                                            d.getSeconds().padLeft()].join(':');
                                        $('<p><strong>'+listelemnt.username+' -'+dformat+'</strong>:'+listelemnt.comment+'</p>').appendTo("#viewcommentdiv");


                                    });
                                }
                                $('#commentandreportdiv').hide();
                                $('#buttonid').show();
                                $('#viewcomment').show();
                                $('#hidecomment').hide();
                                $('#notifcation_message').text('Comment Added');
                                $('#notifcation_message').show();
                                setTimeout(function() {
                                    $('#notifcation_message').fadeOut('fast');
                                }, 7000)
                            }
                            ,
                            error: function()
                            {
                                window.location.href = base_url+'/login';

                            }
                        });
                    }
                    else
                    {
                        jAlert('','Enter Comment!!!');
                        $('#usermycommentid').focus();
                    }



                });
                $('#chatform').submit(function($e)
                {
                    $e.preventDefault();
                    var self = this;
                    var obj = {},chart;
                    chart = $('#area').highcharts();
                    obj.svg = chart.getSVG();
                    obj.type = 'image/png';
                    obj.width = 450;
                    obj.async = true;
                    var data = {svgid :obj.svg,typeid:obj.type,filewidth:obj.width,fileanys:obj.async} ;
                    $.ajaxSetup({
                        global: false,
                        type: "post",
                        url: Routing.generate('addchart'),

                    });
                    $.ajax({
                        data: data,
                        success: function (data)
                        {

                            $('#imagefilename').val(data);
                            submitchatform();

                        }
                        ,
                        error: function()
                        {
                            window.location.href = base_url+'/login';

                        }
                    });

                });
                function submitchatform()
                {

                    var form=$('#chatform');
                    $.ajaxSetup({
                        global: false,
                        type: "post",
                        url: Routing.generate('addcommentkpi'),
                        beforeSend: function ()
                        {
                            var beforsend=ajaxbefore_send();
                        },
                        complete: function () {
                            var complete=ajax_complete();
                        }
                    });
                    $.ajax({
                        data: form.serialize(),
                        success: function (data)
                        {

                            $('#commentform').hide();
                            $('#mailform').hide();
                            $('#addcomment').hide();
                            $('#mycommentid').val(' ');
                            $('#toemail').val(' ');

                            $('#commentandreportdiv').hide();
                            $('#buttonid').show();
                            $('#notifcation_message').text(data.updatemsg);
                            $('#notifcation_message').show();
                            setTimeout(function() {
                                $('#notifcation_message').fadeOut('fast');
                            }, 7000)

                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown)
                        {
                            window.location.href = base_url+'/login';
                        }
                    });
                };


                $('#mycommentid').click(function()
                {
                    $('#livesearchdiv').hide();
                });
                $('#mycommentid').focus(function()
                {
                    $('#livesearchdiv').hide();
                });

                var kpiRulesShow = $('#ranking_elementrules');
                kpiRulesShow.hide();
                $('#element_btn_rules').click(function($e) {
                    $e.preventDefault();
                    if(toggleRulesStatus==0 && toggleOriginalDataStatus ==0) {
                        toggleRulesStatus=1;
                        kpiRulesShow.toggle();
                    } else if(toggleRulesStatus==0 && toggleOriginalDataStatus ==1){
                        kpiRulesShow.toggle();
                        originalDataTableClass.toggle();
                        toggleRulesStatus=1;
                        toggleOriginalDataStatus=0;
                    } else {
                        kpiRulesShow.toggle();
                        toggleRulesStatus=0;
                    }
                });
                $('#ranking_elementrules').hide();
                Number.prototype.padLeft = function(base,chr){
                    var  len = (String(base || 10).length - String(this).length)+1;
                    return len > 0? new Array(len).join(chr || '0')+this : this;
                }


                /*------------------------------Element original values show coding----------------------------------*/

                var monthNumber;
                var toggleRulesStatus = 0;
                var toggleOriginalDataStatus = 0;
                var elementOriginalValuesClass = $('.element-original-values-class');
                var originalDataTableClass = $('.original-data-table');
                originalDataTableClass.hide();
                elementOriginalValuesClass.click(function($e) {
                    $e.preventDefault();
                    var data = {
                        monthNumber:{{ monthInNumber }},
                        kpiDetailsId:{{ kpiid }}
                    };
                    $.ajaxSetup({
                        global: false,
                        type:"POST",
                        url:"find_ranking_element_original_value",/*Routing.generate('find_ranking_element_original_value'),*/
                        data:data,
                        beforeSend: function () {
                            var setAjaxBeforeSend = defaultAjaxBeforeSendFunction();
                        },
                        complete: function () {
                            var setAjaxComplete = defaultAjaxCompleteFunction();
                        }
                    });
                    $.ajax({
                        success: function(data) {
                            monthNumber = data.monthNumber;
                            originalDataTableClass.empty();
                            $('<thead><tr><th>{{ kpiname }}</th><th id="month-name-head" style="text-align: right" colspan="16"><a style="cursor: pointer" class="previous-month left-arrow ss-navigateleft">&nbsp;</a>'+data.monthName+'<a style="cursor: pointer" class="next-month right-arrow ss-navigateright">&nbsp;</a></th></tr><tr id="original-data-head-row" class="v_r_min_height"><th class="kpi_lement_name"></th><th class="kpi_weightage"><div class="verfication_ranking_text_rotation_2">Weightage</div></th></tr></thead>').appendTo(originalDataTableClass);
                            $.each(data.shipDetail, function(i,ship) {
                                $('<th class="kpi_ship "><div class="verfication_ranking_text_rotation_2">'+ship.shipName+'</div></th>').appendTo($('#original-data-head-row'));
                            });
                            $('<tbody class="original-table-body"></tbody>').appendTo(originalDataTableClass);
                            var row_count = 0;
                            {% for element in listofelement %}
                            $('<tr id="body-row-id-'+row_count+'"><td class="kpi_lement_name kpi_lement_name">{{ element.elementName }}</td><td>{{ element.weightage }}</td></tr>').appendTo($('.original-table-body'));
                            $.each(data.elementOriginalValues, function(j,value) {
                                $('<td>'+value[row_count]+'</td>').appendTo($('#body-row-id-'+row_count+''));
                            });
                            row_count++;
                            {% endfor %}
                            if(toggleRulesStatus==0 && toggleOriginalDataStatus ==0) {
                                toggleOriginalDataStatus=1;
                                originalDataTableClass.toggle();
                            } else if(toggleRulesStatus==1 && toggleOriginalDataStatus ==0){
                                kpiRulesShow.toggle();
                                originalDataTableClass.toggle();
                                toggleRulesStatus=0;
                                toggleOriginalDataStatus=1;
                            } else {
                                originalDataTableClass.toggle();
                                toggleOriginalDataStatus=0;
                            }
                        },
                        error: function(XMLHttpRequest, textStatus, errorThrown) {
                            alert('Error : ' + errorThrown);
                        }
                    });
                });

                var previousMonth = $('.previous-month');
                var nextMonth = $('.next-month');
                previousMonth.live("click",function($e) {
                    if(monthNumber-1>=1) {
                        var data = {
                            monthNumber:monthNumber-1,
                            kpiDetailsId:{{ kpiid }}
                        };
                        $.ajaxSetup({
                            global: false,
                            type:"POST",
                            url:"previous_month_ranking_element_original_value",/*Routing.generate('previous_month_ranking_element_original_value'),*/
                            data:data,
                            beforeSend: function () {
                                var setAjaxBeforeSend = defaultAjaxBeforeSendFunction();
                            },
                            complete: function () {
                                var setAjaxComplete = defaultAjaxCompleteFunction();
                            }
                        });
                        $.ajax({
                            success: function(data) {
                                monthNumber = data.monthNumber;
                                var originalTableBody = $('.original-table-body');
                                var monthNameHead = $('#month-name-head');
                                originalTableBody.empty();
                                monthNameHead.empty();
                                $('<a style="cursor: pointer" class="previous-month left-arrow ss-navigateleft">&nbsp;</a>'+data.monthName+'<a style="cursor: pointer" class="next-month right-arrow ss-navigateright">&nbsp;</a>').appendTo(monthNameHead);
                                var row_count = 0;
                                {% for element in listofelement %}
                                $('<tr id="body-row-id-'+row_count+'"><td class="kpi_lement_name kpi_lement_name">{{ element.elementName }}</td><td>{{ element.weightage }}</td></tr>').appendTo(originalTableBody);
                                $.each(data.elementOriginalValues, function(j,value) {
                                    $('<td>'+value[row_count]+'</td>').appendTo($('#body-row-id-'+row_count+''));
                                });
                                row_count++;
                                {% endfor %}
                            },
                            error: function(XMLHttpRequest, textStatus, errorThrown) {
                                alert('Error : ' + errorThrown);
                            }
                        });
                    } else {
                        alert('This is the first month of this year');
                    }
                });

                nextMonth.live("click",function($e) {
                    var num = {{ monthInNumber }};
                    if(parseInt(monthNumber)+1<=parseInt(num)) {
                        var data = {
                            monthNumber:parseInt(monthNumber)+1,
                            kpiDetailsId:{{ kpiid }}
                        };
                        $.ajaxSetup({
                            global: false,
                            type:"POST",
                            url:"previous_month_ranking_element_original_value",/*Routing.generate('previous_month_ranking_element_original_value'),*/
                            data:data,
                            beforeSend: function () {
                                var setAjaxBeforeSend = defaultAjaxBeforeSendFunction();
                            },
                            complete: function () {
                                var setAjaxComplete = defaultAjaxCompleteFunction();
                            }
                        });
                        $.ajax({
                            success: function(data) {
                                monthNumber = data.monthNumber;
                                var originalTableBody = $('.original-table-body');
                                var monthNameHead = $('#month-name-head');
                                originalTableBody.empty();
                                monthNameHead.empty();
                                $('<a style="cursor: pointer" class="previous-month left-arrow ss-navigateleft">&nbsp;</a>'+data.monthName+'<a style="cursor: pointer" class="next-month right-arrow ss-navigateright">&nbsp;</a>').appendTo(monthNameHead);
                                var row_count = 0;
                                {% for element in listofelement %}
                                $('<tr id="body-row-id-'+row_count+'"><td class="kpi_lement_name kpi_lement_name">{{ element.elementName }}</td><td>{{ element.weightage }}</td></tr>').appendTo(originalTableBody);
                                $.each(data.elementOriginalValues, function(j,value) {
                                    $('<td>'+value[row_count]+'</td>').appendTo($('#body-row-id-'+row_count+''));
                                });
                                row_count++;
                                {% endfor %}
                            },
                            error: function(XMLHttpRequest, textStatus, errorThrown) {
                                alert('Error : ' + errorThrown);
                            }
                        });
                    } else {
                        alert('This is current month value');
                    }
                });
              $('#weigahte_button').click(function ($e)
              {
                  $e.preventDefault();
                  $('#elementweightage').toggle();


              });

            });
        </script>
    {% endblock %}

    <div class="col-md-12 users_advanced_list_views_screen">
        <div class="table-responsive">

            <table class="table table-striped graph_and_colour_coding_main_title_row">
                <thead>
                <tr>
                    <th>{{ kpiname }}</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td>
                        <a class="linkclass" href="{{ path('listallkpiforship_ranking', { 'shipid': shipid,'year':2016}) }}" style="float: right"  >{{ 'elementranking.backlink'|trans }}</a></td>
                </tr>
                </tbody>
            </table>
            <table class="table table-striped-3 element_ranking_new_row">
                <thead>
                <tr>
                    <th class="kpi_name">{{ 'elementranking.element'|trans }}</th>
                    {% for monthname in monthdetails %}
                        <th  colspan="2" class="month">{{ monthname }}</th>
                    {% endfor %}
                </tr>
                </thead>
                <tbody>
                {% set countmonth1= countmonth-1 %}
                {% set i=0 %}
                {% for element in listofelement %}
                    <tr>
                        <td  class="element_name_title">{{ element.elementName }}

                        {% for j in 0..countmonth1 %}
                            <td>

                                {{ monthlydata[j][i]  }}
                            </td>

                            <td>
                                {% if elementcolorarray[j][i]=="Green" %}
                                    <img class="img-icon" src="/images/02.large.png" alt="Loader Image"/>
                                {% elseif elementcolorarray[j][i]=="Red" %}
                                    <img class="img-icon" src="/images/03.large.png" alt="Loader Image"/>
                                {% elseif elementcolorarray[j][i]=="Yellow" %}
                                    <img class="img-icon" src="/images/01.large.png" alt="Loader Image"/>
                                {% endif %}
                            </td>

                        {% endfor %}

                    </tr>

                    {% set i=i+1 %}
                {% endfor %}
                <tr>
                    <td colspan="" class="kpi_name_thtd"><strong>{{ 'elementranking.score'|trans }}</strong></td>


                    {% for avg in avgscore %}
                        {% set i1=0 %}
                        <td><strong>{{ avg }}</strong></td>
                        {% if i1 != 2 %}
                            <td>&nbsp;</td>
                        {% endif %}
                        {% set i1=i1+1 %}
                    {% endfor %}
                </tr>

                </tbody>
            </table>

            <div class="rules_ranking">
                <a class="rules_show_btn"  id="element_btn_rules" href="">{{ 'elementranking.ruleshow'|trans }}</a>
                <a class="rules_show_btn element-original-values-class" style="cursor: pointer">Original values</a>
                <a class="rules_show_btn " id="weigahte_button" style="cursor: pointer">Weightage</a>
            </div>
            <div id="elementweightage">
                <table class="table table-striped graph_and_colour_coding_main_title_row">
                    <thead>
                    <tr>
                        <th>{{ kpiname }}</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        <td>
                            <a class="linkclass" href="{{ path('listallkpiforship_ranking', { 'shipid': shipid,'year':2016}) }}" style="float: right"  >{{ 'elementranking.backlink'|trans }}</a></td>
                    </tr>
                    </tbody>
                </table>
                <table class="table table-striped-3 element_ranking_new_row">
                    <thead>
                    <tr>
                        <th class="kpi_name">{{ 'elementranking.element'|trans }}</th>
                        <th>From </th>
                        <th>To</th>
                        <th>Weighatge</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% set countmonth1= countmonth-1 %}
                    {% set i=0 %}
                    {% for element in listofelement %}
                        <tr>
                            <td  class="element_name_title">{{ element.elementName }}

                                {% for j in 0..countmonth1 %}
                            <td>

                                {{ monthlydata[j][i]  }}
                            </td>

                            <td>
                                {% if elementcolorarray[j][i]=="Green" %}
                                    <img class="img-icon" src="/images/02.large.png" alt="Loader Image"/>
                                {% elseif elementcolorarray[j][i]=="Red" %}
                                    <img class="img-icon" src="/images/03.large.png" alt="Loader Image"/>
                                {% elseif elementcolorarray[j][i]=="Yellow" %}
                                    <img class="img-icon" src="/images/01.large.png" alt="Loader Image"/>
                                {% endif %}
                            </td>

                            {% endfor %}

                        </tr>

                        {% set i=i+1 %}
                    {% endfor %}
                    <tr>
                        <td colspan="" class="kpi_name_thtd"><strong>{{ 'elementranking.score'|trans }}</strong></td>


                        {% for avg in avgscore %}
                            {% set i1=0 %}
                            <td><strong>{{ avg }}</strong></td>
                            {% if i1 != 2 %}
                                <td>&nbsp;</td>
                            {% endif %}
                            {% set i1=i1+1 %}
                        {% endfor %}
                    </tr>

                    </tbody>
                </table>
            </div>

            <table class="table table-striped-4 kpi_ranking_rules_show_row" id="ranking_elementrules">
                <thead>
                <tr>
                    <th colspan="3">Rules</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td id="rulePlaceId" class="rulePlace">

                    </td>
                </tr>
                </tbody>
            </table>

            <table class="table verfication_ranking_table_form_section original-data-table" style="margin-bottom: 20px;"></table>


            <table class="table table-striped normal_table">
                <thead>
                <tr>
                    <th>{{ kpiname }}</th>
                </tr>
                </thead>
                <tbody>
                <tr>
                    <td id="area"></td>
                </tr>
                </tbody>
            </table>
        <div id="">
            {% set newcommandarray = {} %}
            {% set jk=0 %}
            {% set ik=0 %}
            {% for kpiRules in elementRule %}
                {% for kpi_rules in kpiRules %}
                    {% set newcommandarray = newcommandarray|merge({('_'~jk):(kpi_rules.rules)}) %}
                    {% set jk=jk+1 %}
                {% endfor %}
                {% if elementRule[ik] != NULL %}
                    {% if elementRule[ik][0].rules  != NULL %}
                        <input type="hidden" name="listofcomments" id={{ listofelement[ik]['id'] }} value="{{ newcommandarray|join('*') }}">
                    {% else %}
                        <input type="hidden" name="listofcomments" id="" value="{{ newcommandarray|join('*') }}">
                    {% endif %}
                {% endif %}

                {% set ik=ik+1 %}
                {% set newcommandarray = {} %}
            {% endfor %}
        </div>


        <table class="table table-striped normal_table graph_comment">
            <tbody>
            <tr>
                <td id="viewcommentdiv" >
                    {% if commentarray|length <= 0 %}

                        {{ 'elementranking.nocommands'|trans }}
                    {% endif %}
                    {% if commentarray|length > 0 %}
                        {% for comobject in commentarray %}
                            <p><strong>{{ comobject.username }}-{{ comobject.datetime|date('m-d-Y H:i:s') }} :</strong> {{ comobject.comment }}</p>


                        {% endfor %}
                    {% endif %}
                </td>
            </tr>
            </tbody>
        </table>
        </div>
        <div class="clear_fix"></div><span class="notification_msg" id="notifcation_message"></span>
        <div class="graph_send_comment">
        <div id="buttonid">

            <button value="Submit" id="showcommentform"  class="submit_btn_add">{{ 'kpiranking.addcomment'|trans }}</button>
            <button value="Submit" id="sendreports"  class="submit_btn_add">{{ 'kpiranking.sendreport'|trans }}</button>
            <button value="Submit" id="viewcomment"  class="submit_btn_add">{{ 'kpiranking.viewcomment'|trans }}</button>
            <button value="Submit" id="hidecomment"  class="submit_btn_add">{{ 'kpiranking.hidecomment'|trans }}</button>
        </div>
        </div>
        <div id="commentandreportdiv" class="graph_send_comment">
            <div class="add_new_users_form">
                <!--Form for Add comment Starts Here  -->

                <fieldset id="commentform" class="fieldset_box_2">
                    <legend class="legend_name">{{ 'elementranking.addcomment'|trans }}</legend>
                    <form  class="form-horizontal no-style"  method="post">

                        <input id="kpiidforname" type="hidden" name="send_command[kpiid] " value="{{ kpiid }}">

                        <div class="form-group">
                            <div class="col-xs-12">
                                {#<textarea class="add_comment_textarea" placeholder="Enter comment here..."> </textarea>#}
                                <textarea id="usermycommentid" class="add_comment_textarea" placeholder="Enter Comment Here" name="send_command[comment]" required></textarea>
                            </div>
                        </div>
                        {#  <button value="Save" type="submit" class="submit_btn_save">Save</button>#}
                        <input  class="submit_btn_save" id="addcommentid" type="submit" value="{{ 'elementranking.save'|trans }}">
                    </form>
                </fieldset>
                <!--Form for Add comment Ends Here  -->
                <!--Form for Send Reports Starts Here  -->
                <fieldset id="mailform" class="fieldset_box_2">
                    <legend class="legend_name">{{ 'elementranking.sendreport'|trans }}</legend>
                    <form id="chatform" class="form-horizontal no-style" method="post">

                        <input id="imagefilename" type="hidden" name="send_command[filename]" >
                        <input id="lastid" type="hidden" name="send_command[lastid]" >
                        <input id="kpiidforname" type="hidden" name="send_command[kpiid] " value="{{ kpiid }}">
                        <div class="form-group">
                            <label class="control-label  col-xs-3">{{ 'elementranking.addcomment'|trans }}</label>
                            <div class="col-xs-9">

                                <div class="add_comment_checkbox"><label><input type="checkbox"  name="send_command[addcomment]" class="inline-checkbox" value="Yes"> {{ 'elementranking.yes'|trans }}</label></div>

                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label required_field col-xs-3">{{ 'elementranking.to'|trans }}</label>
                            <div class="col-xs-9">

                                <input id="toemail" type="text" class="send_reports_to_input" name="send_command[clientemail]" required>
                                <div id="livesearchdiv"  class="send_reports_to_input_list">
                                    <ul id="livesearch">

                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label required_field col-xs-3">{{ 'elementranking.mailbox'|trans }}</label>
                            <div class="col-xs-9">
                                {# <textarea class="add_comment_textarea" placeholder="Enter comment here"> </textarea>#}
                                <textarea id="mycommentid" name="send_command[comment]" required class="add_comment_textarea" placeholder="Enter comment here"></textarea>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-xs-3">&nbsp;</label>
                            <div class="col-xs-9">
                                {#<button value="Send reports" type="submit" class="submit_btn_2">Send reports</button>#}
                                <input id="" class="submit_btn_2" type="submit" value="{{ 'kpiranking.send'|trans }}">
                            </div>

                        </div>
                    </form>
                </fieldset>
                <!--Form for Send Reports Ends Here  -->

            </div>
        </div>
        </div>
    </div>
{% endblock %}