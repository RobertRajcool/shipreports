{% extends 'base.html.twig' %}

{% block body %}

    {% block stylesheets %}
        {% stylesheets
        '@InitialShippingBundle/Resources/public/css/design/*' %}
        <link rel="stylesheet" href="{{ asset_url }}"/>
        {% endstylesheets %}
    {% endblock %}
    <style>
        .pass {
            color: white;
        }
        .change {
            color: red;
        }
        #errormsg {
            color: red;
        }
        .pass2{
            color:white;
        }
    </style>

    {% block javascripts %}

        {% javascripts
        '@AppBundle/Resources/public/js/AAA.js'
        '@AppBundle/Resources/public/js/demo.js'
        '@AppBundle/Resources/public/js/actions-builder.js'
        '@AppBundle/Resources/public/js/Element_conditions-builder.js'
        '@AppBundle/Resources/public/js/sample.js' %}
        <script src="{{ asset_url }}"></script>
        {% endjavascripts %}


        <script type="text/javascript">
            $(document).ready(function () {
                var createView= $('.create_view');
                var listView= $('#list_view');
                var showView=$('.show_view');
                var editView=$('.edit_view');
                var boxIcon= $('.box_icon');
                var listIcon= $('.list_icon');
                var gridView= $('#grid_view');
                var editEmailName;
                var editMobileName;



                createView.show();
                listView.hide();
                showView.hide();
                editView.hide();
                boxIcon.hide();


                boxIcon.click(function ($e) {
                    $e.preventDefault();
                    listView.hide();
                    gridView.show();
                    editView.hide();
                    showView.hide();
                    boxIcon.hide();
                    listIcon.show();
                    createView.show();
                    $('.fos_user_registration_register')[0].reset();
                });
                listIcon .click(function ($e) {
                    $e.preventDefault();
                    gridView.hide();
                    listView.show();
                    createView.hide();
                    editView.hide();
                    showView.hide();
                    boxIcon.show();
                    listIcon.hide();
                    $('.fos_user_registration_register')[0].reset();
                });
                var addButton= $('.add_btn');
                addButton.live("click", function ($e) {
                    $e.preventDefault();
                    gridView.show();
                    listView.hide();
                    createView.show();
                    editView.hide();
                    showView.hide();
                    $('.fos_user_registration_register')[0].reset();
                });
                var cancelButton=  $('.cancel_btn');
                cancelButton.live("click", function ($e) {
                    $e.preventDefault();
                    createView.show();
                    gridView.show();
                    editView.hide();
                    showView.hide();
                    $('.fos_user_registration_register')[0].reset();

                });
                var  editButton= $('.edit_btn');
                editButton.live("click", function ($e) {
                    $e.preventDefault();
                    editEmailName = editEmail.val();
                    editMobileName = editMobile.val();
                    gridView.show();
                    listView.hide();
                    showView.hide();
                    createView.hide();
                    editView.show();
                    $('.fos_user_registration_register')[0].reset();
                });
                var editCancelButton= $('.edit_cancel_btn');
                editCancelButton.live("click", function ($e) {
                    $e.preventDefault();
                    editView.hide();
                    showView.show();
                    createView.hide();
                });

                var count = 0;
                var userShow= $('.user_class');
                userShow.live("click", function ($e) {
                    $e.preventDefault();
                    count++;
                    var currentId = $(this).attr('id');
                    var data = {Id: currentId};
                    /*if (count > 1) {

                     }*/



                    var userName= $('.user_name');
                    var userEmail=$('.user_email');
                    var userMobile=$('.user_mobile');
                    var userRoles= $('.user_roles');

                    userName.empty();
                    userEmail.empty();
                    userMobile.empty();
                    userRoles.empty();

                    $.ajaxSetup({
                        global: false,
                        type: "POST",
                        url: "user_edit",
                        data: data,
                        beforeSend: function () {
                            var setAjaxBeforeSend = ajaxbefore_send();
                        },
                        complete: function () {
                            var setAjaxComplete = ajax_complete();
                        }
                    });

                    $.ajax({

                        success: function (data) {
                            editView.hide();
                            createView.hide();
                            showView.show();



                            userName.append(data.User_detail[0].username);
                            userEmail.append(data.User_detail[0].email);
                            userMobile.append(data.User_detail[0].mobile);
                            userRoles.append(data.User_detail[0].roles[0]);
                            if(data.User_detail[0].imagepath!=null)
                            {
                                $("#tempimageid").attr('src', '/uploads/userimages/'+data.User_detail[0].imagepath);
                            }
                            else
                            {
                                $("#tempimageid").attr('src', '/images/nouser.png');
                            }






                            $('.edit_user_id').val(data.User_detail[0].id);
                            $('.edit_username').val(data.User_detail[0].username);
                            $('.edit_email').val(data.User_detail[0].email);
                            $('.edit_mobile').val(data.User_detail[0].mobile);
                            $('.edit_fullname').val(data.User_detail[0].fullname);

                            var rolesvalue=data.User_detail[0].roles[0];
                            if(rolesvalue=='ROLE_KPI_INFO_PROVIDER')
                            {
                                $('#radio_3').attr('checked', 'checked');
                            }
                            else if(rolesvalue=='ROLE_MANAGER')
                            {
                                $('#radio_4').attr('checked', 'checked');
                            }
                            else
                            {

                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert('Error : ' + errorThrown);
                        }
                    });
                    $('.show_kpi').show()
                });


                /*var  editEmailError = ('#edit-mail')

                 function editErrorEmptyValuesFunction() {
                 editEmailError.empty();
                 }*/

                var createEmail = $('#val_email');
                var createVesselErrorMsg = $('#create-val-email');
                createEmail.change(function($e) {
                    $e.preventDefault();
                    var data = {'email':createEmail.val()};
                    $.ajaxSetup({
                        global: false,
                        type:"POST",
                        url:"check_email",
                        data:data,
                        beforeSend: function () {
                            var setAjaxBeforeSend = ajaxbefore_send();
                        },
                        complete: function () {
                            var setAjaxComplete = ajax_complete();
                        }
                    });
                    $.ajax({
                        success: function(data) {
                            createVesselErrorMsg.empty();
                            if(data.email==1) {
                                createVesselErrorMsg.text("Email is already registered !");
                                createEmail.focus();
                                return false;
                            }
                            if(!$.trim(createEmail.val())) {
                                createVesselErrorMsg.text('Email name cannot be empty !');
                                createEmail.focus();
                                return false;
                            }
                        },
                        error: function(XMLHttpRequest, textStatus, errorThrown) {
                            alert('Error : ' + errorThrown);
                        }
                    });
                });

                var editEmail = $('#mail');
                var  editEmailError = ('#edit-mail');
                editEmail.change(function($e) {
                    $e.preventDefault();
                    var data = {'email': editEmail.val()};
                    $.ajaxSetup({
                        global: false,
                        type: "POST",
                        url: "check_email",
                        data: data,
                        beforeSend: function () {
                            var setAjaxBeforeSend = ajaxbefore_send();
                        },
                        complete: function () {
                            var setAjaxComplete = ajax_complete();
                        }
                    });
                    $.ajax({
                        success: function (data) {
                            //editEmailError.empty();
                            if(data.email==data.status && editEmailName!=editEmail.val()) {
                                jAlert("Email is already registered !");
                                editEmail.focus();
                                return false;
                            }
                            if (!$.trim(editEmail.val())) {
                                jAlert('Email cannot be empty !');
                                editEmail.focus();
                                return false;
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert('Error : ' + errorThrown);
                        }
                    });

                });

                var createMobile = $('#user_mobile');
                var createmobileErrorMsg = $('#create-val-mobile');
                createMobile.change(function($e) {
                    $e.preventDefault();
                    var data = {'mobile':createMobile.val()};
                    $.ajaxSetup({
                        global: false,
                        type:"POST",
                        url:"check_mobile",
                        data:data,
                        beforeSend: function () {
                            var setAjaxBeforeSend = ajaxbefore_send();
                        },
                        complete: function () {
                            var setAjaxComplete = ajax_complete();
                        }
                    });
                    $.ajax({
                        success: function(data) {
                            createmobileErrorMsg.empty();
                            if(data.mobile==1) {
                                // jAlert('mobile number already registered')
                                createmobileErrorMsg.text("mobile  number is already registered !");
                                createMobile.focus();
                                return false;
                            }
                            if(!$.trim(createMobile.val())) {
                                createmobileErrorMsg.text('mobile number cannot be empty !');
                                createMobile.focus();
                                return false;
                            }
                            if (createMobile.val().length < 10 || createMobile.val().length > 10) {
                                createmobileErrorMsg.text("Mobile No. is not valid, Please Enter 10 Digit Mobile No.");
                                createMobile.focus();
                                return false;
                            }
                        },
                        error: function(XMLHttpRequest, textStatus, errorThrown) {
                            alert('Error : ' + errorThrown);
                        }
                    });
                });

                var editMobile = $('#mobile');
                var  editEmailError = ('#edit-phone');
                editMobile.change(function($e) {
                    $e.preventDefault();
                    var data = {'mobile': editMobile.val()};
                    $.ajaxSetup({
                        global: false,
                        type: "POST",
                        url: "check_mobile",
                        data: data,
                        beforeSend: function () {
                            var setAjaxBeforeSend = ajaxbefore_send();
                        },
                        complete: function () {
                            var setAjaxComplete = ajax_complete();
                        }
                    });
                    $.ajax({
                        success: function (data) {
                            //editEmailError.empty();
                            if(data.mobile==data.status && editMobileName!=editMobile.val()) {
                                jAlert("Mobile number is already registered !");
                                editMobile.focus();
                                return false;
                            }
                            if (!$.trim(editMobile.val())) {
                                jAlert('mobile cannot be empty !');
                                editMobile.focus();
                                return false;
                            }
                            if (editMobile.val().length < 10 || editMobile.val().length > 10) {
                                jAlert("Mobile No. is not valid, Please Enter 10 Digit Mobile No.");
                                editMobile.focus();
                                return false;
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert('Error : ' + errorThrown);
                        }
                    });

                });




                var editSubmitButton= $('.edit_submit_btn');
                editSubmitButton.live("click", function ($e) {
                    $e.preventDefault();
                    var username = $('.edit_username').val();
                    var email = $('.edit_email').val();
                    var mobile = $('.edit_mobile').val();
                    var fullname = $('.edit_fullname').val();


                    if (fullname == "") {
                        jAlert('', 'fullname required');
                        $('.edit_fullname').focus();
                        return false
                    }
                    if (username == "") {
                        jAlert('', 'User Name Required');
                        $('.edit_username').focus();
                        return false
                    }
                    if (email == "") {
                        jAlert('', 'Email Required');
                        $('.edit_email').focus();
                        return false
                    }

                    if (mobile == "") {
                        jAlert('', 'mobile no Required');
                        $('.edit_mobile').focus();
                        return false
                    }
                    if (mobile.length != 10) {
                        jAlert("Phone number must be 10 digits.");
                        $('.edit_mobile').focus();
                        return false;
                    }



                    var data = {
                        Id: $('.edit_user_id').val(),
                        name: $('.edit_username').val(),
                        email: $('.edit_email').val(),
                        mobile: $('.edit_mobile').val(),
                        fullname: $('.edit_fullname').val(),
                        privileges: $('.inline-checkbox:checked').val()
                    };
                    $.ajaxSetup({
                        global: false,
                        type: "POST",
                        url: "sample_edit",
                        data: data,
                        beforeSend: function () {
                            var setAjaxBeforeSend = ajaxbefore_send();
                        },
                        complete: function () {
                            var setAjaxComplete = ajax_complete();
                        }
                    });

                    $.ajax({

                        success: function (data) {

                            var editUserName = $('#edit_username');
                            var editUserEmail = $('#user_email');
                            var editUserRoles = $('#user_roles');
                            var editUserMobile = $('#user_mobile');


                            editUserName.text('');
                            editUserName.text(data.User_detail[0].username);
                            editUserEmail.text('');
                            editUserEmail.text(data.User_detail[0].email);
                            editUserRoles.text('');
                            editUserRoles.text(data.User_detail[0].roles[0]);
                            editUserMobile.text('');
                            editUserMobile.text(data.User_detail[0].mobile);

                            gridView.show();
                            listView.hide();
                            editView.hide();
                            showView.show();
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert('Error : ' + errorThrown);
                        }
                    });

                });

            });

        </script>

        <script type="text/javascript">

            function validate(txtMobId) {
                //alert('hi');
                //var phoneNo = document.getElementById('user_mobile');
                //var fullname = document.getElementById('full_name');
                var name = document.getElementById('val_name');
                var char = /^[A-Za-z]+$/;

                /*if (phoneNo.value.length < 10 || phoneNo.value.length > 10) {
                 jAlert("Mobile No. is not valid, Please Enter 10 Digit Mobile No.");
                 document.getElementById('user_mobile').focus();
                 return false;
                 }*/
                if (!name.value.match(char)) {
                    jAlert("please enter characters only");
                    document.getElementById('val_name').focus();
                    return false;
                }

                if(!$.trim(name.val())) {
                    jAlert('mobile number cannot be empty !');
                    document.getElementById('val_name').focus();
                    return false;
                }
                var fullname = document.getElementById('full_name');
                var letters = /^[A-Za-z]+$/;
                if(fullname.value.match(letters))
                {
                    return true;
                }
                else{
                    jAlert("please enter characters only");
                    document.getElementById('full_name').focus();
                    return false;
                }

            }
            $(document).ready(function () {
                $('#fos_user_registration_form_roles_0').hide();
                $('#fos_user_registration_form_roles').hide();



                $('#fos_user_registration_form_plainPassword_first').keyup(function ($e) {
                    var CheckPassword = $(this).val();
                    var pattern = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/;
                    if (pattern.test(CheckPassword)) {
                        $('#errormsg').text('');
                        return true;
                    }
                    else {
                        $('#errormsg').text('password must contain 8 characters one uppercase and special characters');
                        return false;
                    }
                });

                $('#fos_user_registration_form_plainPassword_second').keyup(function ($e) {
                    var CheckPassword = $(this).val();
                    var pattern = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/;
                    if (pattern.test(CheckPassword)) {
                        $('#errormsg').text('');
                        return true;
                    }
                    else {
                        $('#errormsg').text('Password does not match');
                        return false;
                    }
                });


                $('#userform').submit(function ($e) {
                    if ($('#fos_user_registration_form_plainPassword_first').val() == $('#fos_user_registration_form_plainPassword_second').val()) {
                        $('#errormsg').text('');
                        return true;
                    } else {
                        jAlert('Password does not match')
                        $('#errormsg').text('Password does not match');
                        return false;
                    }
                });

                $('#userform').submit(function ($e) {
                    var CheckPassword = $('#fos_user_registration_form_plainPassword_first').val();


                    var pattern = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/;
                    if (pattern.test(CheckPassword)) {
                        $('#errormsg').text('');
                        return true;
                    }
                    else {
                        $('#errormsg').text('');

                        return false;
                    }
                });
            });
        </script>
    {% endblock %}



    <div id="grid_view">
        <section>
            <div class="col-sm-3 users_views">
                <div class="add_user_btn_main">
                    <span class="user_btn_main"><a href="" class="ss-plus add_btn"> {{ 'user.add_user'|trans }}</a></span>
                    <span class="user_btn_main grid_list_main">
              <span class="active"><a href="" class="grid_list_icon ss-grid box_icon">&nbsp;</a></span>
              <span><a href="" class="grid_list_icon ss-rows list_icon">&nbsp;</a></span>
          </span>
                </div>
                <div class="users_list_main"><span>User ({{ user_count }})</span> <span class="show_dropdown_icon">&nbsp;</span>
                </div>
                <div class="users_list_grid_main">
                    {% for listofuser in userdetails %}
                        <div class="users_list_grid">
                    <span class="users_name_row">
                        <span class="name"><a href="" class="user_class" id={{ listofuser.id }}>{{ listofuser.username }}</a> </span>
                        {% if listofuser.roles[0] == "ROLE_MANAGER" %}
                            <span class="text">KPI Manager</span>
                        {% elseif listofuser.roles[0] == "ROLE_KPI_INFO_PROVIDER" %}
                            <span class="text">V-Ships Manager</span>
                        {% elseif listofuser.roles[0] == "ROLE_ADMIN" %}
                            <span class="text">Admin</span>
                        {% endif %}
                    </span>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </section>
    </div>


    <div id="list_view">
        <section>
            <div class=" users_advanced_list_views_screen">
                <div class="">
                    <div class="add_user_btn_main">
                        <span class="user_btn_main"  style="float: left;"><a href="" class="ss-plus add_btn">{{ 'add.user'|trans }}</a></span>
                        <form id="" class="form-horizontal no-style" action="{{ path('userdetails_pdf') }}"
                              target="_blank" method="post" style="float: left;">

                            <span class="user_btn_main"><button type="submit" class="print_btn">Print</button></span>
                        </form>
                        <span class="user_btn_main grid_list_main">
                         <span class="active"><a href="" class="grid_list_icon ss-grid box_icon">&nbsp;</a></span>
                         <span><a href="" class="grid_list_icon ss-rows list_icon">&nbsp;</a></span>
                      </span>
                    </div>
                    <div class="spacing"></div>
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                            <tr>
                                <th>{{ 'user.name'|trans }}</th>
                                <th>{{ 'user.email'|trans }}</th>
                                <th>{{ 'user.mobile'|trans }}</th>
                                <th>{{ 'user.roles'|trans }}</th>
                            </tr>
                            </thead>
                            <tbody>
                            {% for listofuser in userdetails %}
                                <tr>
                                    <td style="color: black;">{{ listofuser.username }}</td>
                                    <td>{{ listofuser.email }}</td>
                                    <td>{{ listofuser.mobile }}</td>
                                    {% if listofuser.roles[0] == "ROLE_MANAGER" %}
                                        <td>KPI Manager</td>
                                    {% elseif listofuser.roles[0] == "ROLE_KPI_INFO_PROVIDER" %}
                                        <td>V-Ships Manager</td>
                                    {% elseif listofuser.roles[0] == "ROLE_ADMIN" %}
                                        <td>Admin</td>
                                    {% endif %}
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <div class="create_view">
        <section>
            <div class="col-sm-11">
                <div class="add_new_users_views_screen">
                    {{ form_start(form, {'method': 'post', 'action': path('fos_user_registration_register'), 'attr': {'class': 'fos_user_registration_register form-horizontal no-style','id':'userform'}}) }}
                    <div class="add_new_users_form">
                        <fieldset class="fieldset_box">
                            <legend class="legend_name">{{ 'user.header'|trans }}</legend>


                            <div class="form-group">
                                <label class="control-label required_field col-xs-4">{{ 'user.full_name'|trans }}</label>
                                <div class="col-xs-8">
                                    {{ form_row(form.fullname,{'label': ' ','required':'true','id':'full_name'}) }}
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label required_field col-xs-4">{{ 'user.user_name'|trans }}</label>
                                <div class="col-xs-8">
                                    {{ form_row(form.username,{'label': ' ' ,'id':'val_name'}) }}
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label required_field col-xs-4">{{ 'user.email'|trans }}</label>
                                <div class="col-xs-8">
                                    {{ form_row(form.email,{'label': ' ','id':'val_email'}) }}
                                </div>
                                <div class="col-xs-8 weight-error-message" id="create-val-email"></div>
                            </div>

                            <div class="form-group">
                                <label class="control-label required_field col-xs-4">{{ 'user.mobile_no'|trans }}</label>
                                <div class="col-xs-8">
                                    {{ form_row(form.mobile,{'label': ' ','type':'number','required':'true','id':'user_mobile'}) }}
                                </div>
                                <div class="col-xs-8 weight-error-message" id="create-val-mobile"></div>
                            </div>


                        </fieldset>

                        <fieldset class="fieldset_box">
                            <legend class="legend_name">{{ 'user.privileges'|trans }}</legend>
                            {% if is_granted("ROLE_SUPER_ADMIN") %}
                                <div class="form-group">
                                    <label class="control-label col-xs-4">&nbsp;</label>
                                    <div class="col-xs-8">
                                        <label><input type="radio" name="privileges" class="inline-checkbox" value="ROLE_ADMIN"> {{ 'user.admin'|trans }}</label>
                                    </div>
                                </div>
                            {% endif %}
                            <div class="form-group">
                                <label class="control-label col-xs-4">&nbsp;</label>
                                <div class="col-xs-8">
                                    <label><input type="radio" name="privileges" class="inline-checkbox" value="ROLE_KPI_INFO_PROVIDER"> {{ 'user.vship'|trans }}</label>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-xs-4">&nbsp;</label>
                                <div class="col-xs-8">
                                    <label><input type="radio" name="privileges" class="inline-checkbox" value="ROLE_MANAGER"> {{ 'user.kpimanager'|trans }}</label>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset class="fieldset_box">
                            <legend class="legend_name">{{ 'user.security'|trans }}</legend>
                            <div class="form-group">
                               <label class="control-label required_field col-xs-4"> <label class="pass2">..</label>{{ 'user.password'|trans }}
                                    <span class="change">*</span><label class="pass">.</label>
                                    <labe>{{ 'user.confirm'|trans }}</labe></label>
                                <div class="col-xs-8">
                                    {{ form_row(form.plainPassword) }}<span class="error" id="errormsg"> </span>
                                </div>

                            </div>
                        </fieldset>
                    </div>
                    <div class="actions_submit">
                        <button class="submit_btn" type="submit" value="Submit" onclick="return validate()">{{ 'user.add'|trans }}</button>
                        <button class="cancel_btn" type="submit" value="Submit">{{ 'user.reset'|trans }}</button>

                    </div>
                    {{ form_end(form) }}

                </div>
            </div>
        </section>
    </div>

    <div class="show_view">
        <section>
            <div class="col-sm-11">
                <div class="view_new_user_screen">
                    <div class="actions_edit_button">
                        <a href="" class="edit_btn edit_user_button">{{ 'user.edit'|trans }}</a>
                    </div>
                    <div class="user_view_photo">
                        <div class="view_new_user_photo">
                            <img id="tempimageid" src="/uploads/userimages/">
                        </div>
                    </div>


                    <div class="user_view_section">
                        <div class="user_text">
                            <p class="user_name"><label id="edit_username" class="form_input user_name"></label></p>
                            <p><label id="user_email" class="form_input user_email"></label></p>
                            <p><label id="user_mobile" class="form_input user_mobile"></label></p>
                        </div>
                    </div>
                    <div class="user_view_privileges">
                        <p class="title">Privileges</p>
                        <p><label id="user_roles" class="form_input user_roles"></label></p>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <div class="edit_view">
        <section>
            <div class="col-sm-11">
                <div class="add_new_users_views_screen">
                    <div class="add_new_users_form">
                        <fieldset class="fieldset_box">
                            <legend class="legend_name">{{ 'user.basic_info'|trans }}</legend>
                            <div class="form-group">
                                <label class="control-label required_field col-xs-4">{{ 'user.edit_fullname'|trans }}</label>
                                <div class="col-xs-8">
                                    <input type="text" class="edit_fullname" value="" placeholder="" required>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label required_field col-xs-4">{{ 'user.edit_name'|trans }}</label>
                                <div class="col-xs-8">
                                    <input type="text" class="edit_username" value="" placeholder="" readonly>
                                    <input type="hidden" class="edit_user_id" value="" placeholder="">
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label required_field col-xs-4">{{ 'user.edit_email'|trans }}</label>
                                <div class="col-xs-8">
                                    <input type="email" class="edit_email" id="mail" value="" placeholder="" required>
                                </div>
                                <div class="col-xs-8 weight-error-message" id="edit-mail"> </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-xs-4">{{ 'user.edit_mobile'|trans }}</label>
                                <div class="col-xs-8">
                                    <input type="text" class="edit_mobile" id="mobile" value="" placeholder="" required>
                                </div>
                                <div class="col-xs-8 weight-error-message" id="edit-phone"> </div>
                            </div>
                        </fieldset>
                        <fieldset class="fieldset_box">
                            <legend class="legend_name">{{ 'user.edit_privileges'|trans }}</legend>
                            {% if is_granted("ROLE_SUPER_ADMIN") %}
                                <div class="form-group">
                                    <label class="control-label col-xs-4">&nbsp;</label>
                                    <div class="col-xs-8">
                                        <label>
                                            <input type="radio" id="1" name="privileges" class="inline-checkbox" value="ROLE_ADMIN">{{ 'user.edit_admin'|trans }}
                                        </label>
                                    </div>
                                </div>
                            {% endif %}
                            {% if is_granted("ROLE_ADMIN") %}
                                <div class="form-group">
                                    <label class="control-label col-xs-4">&nbsp;</label>
                                    <div class="col-xs-8">
                                        <label>
                                            <input type="radio" id="radio_3" name="privileges" class="inline-checkbox" value="ROLE_KPI_INFO_PROVIDER">{{ 'user.vship'|trans }}
                                        </label>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-xs-4">&nbsp;</label>
                                    <div class="col-xs-8">
                                        <label><input type="radio" id="radio_4" name="privileges" class="inline-checkbox" value="ROLE_MANAGER">{{ 'user.kpimanager'|trans }}</label>
                                    </div>
                                </div>
                            {% endif %}
                        </fieldset>
                        <div class="actions_submit">
                            <button class="submit_btn edit_submit_btn" type="submit" value="Submit">{{ 'user.edit_save'|trans }}</button>
                            <button class="cancel_btn edit_cancel_btn" type="submit" value="Submit">{{ 'user.edit_cancel'|trans }}</button>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

{% endblock %}